generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int                @id @default(autoincrement())
  pattern      String
  width        String
  warranty     String
  availability AvailabilityStatus
  price        Decimal            @db.Decimal(10, 2)
  year         Int
  origin       String
  offer        Boolean            @default(false)
  offerText    String?
  description  String?
  image        String
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  rating       Float?             @default(4.2)
  reviews      Int?               @default(127)
  brandLogo    String?
  brandId      Int?
  diameter     String?
  loadIndex    String?
  profile      String?
  speedRating  String?
  brand        Brand?             @relation(fields: [brandId], references: [id])
  bookings     Booking[]

  @@index([brandId])
  @@index([availability])
  @@index([createdAt])
}

model Service {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  image       String
  price       Decimal? @db.Decimal(10, 2)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Location {
  id           Int       @id @default(autoincrement())
  name         String
  address      String
  phone        String
  image        String
  subdomain    String?
  lat          Decimal?  @db.Decimal(9, 6)
  lng          Decimal?  @db.Decimal(9, 6)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  workingHours String?
  bookings     Booking[]
}

model Banner {
  id        Int      @id @default(autoincrement())
  title     String?
  link      String?
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdAt])
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  role         UserRole
  name         String?
  lastLogin    DateTime?
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  logo      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@index([createdAt])
}

model Booking {
  id            Int       @id @default(autoincrement())
  carYear       String
  carMake       String
  carModel      String
  services      String
  branchId      Int
  branchName    String
  bookingDate   DateTime? @db.Date
  bookingTime   String?
  customerName  String
  customerEmail String
  customerPhone String
  requestType   String
  requestSource String    @default("service")
  productId     Int?
  serviceId     Int?
  quantity      Int?
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  branch        Location  @relation(fields: [branchId], references: [id])
  product       Product?  @relation(fields: [productId], references: [id])

  @@index([branchId])
  @@index([bookingDate])
  @@index([createdAt])
  @@index([isActive])
  @@index([requestType])
  @@index([requestSource])
  @@index([productId])
  @@index([serviceId])
}

enum AvailabilityStatus {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
  CONTACT_US
}

enum UserRole {
  ADMIN
  STAFF
}
